Der ESP 32 schickt ein Array über 100 Einträge an das Python Programm, dort lauscht das Programm und bekommt mit dem Array auch eine Notification. Dies ist hier zu sehen:

sync def read_spo2(address):
    SPO2_UUID = "beb5483e-36e1-4688-b7f5-ea07361b26a8"
    async with BleakClient(address) as client:
        await client.start_notify(SPO2_UUID, notification_handler)
        # Wait for notifications
        while True:
            await asyncio.sleep(1)

async def notification_handler(sender, data):
    spo2_value = int.from_bytes(data, byteorder='little')
    print("SPO2: {0}".format(spo2_value))

Alternativ ist im Kommentar auch der Code dass er alle 1 Sekunden des ESP abfragt:

# async def read_spo2(address):
#    SPO2_UUID = "beb5483e-36e1-4688-b7f5-ea07361b26a8"
#    async with BleakClient(address) as client:
#        while True:  # run in an infinite loop
#           spo2_data = await client.read_gatt_char(SPO2_UUID)
#           print("SPO2: {0}".format(spo2_value))
#           await asyncio.sleep(1)  # wait for 1 second

Die Pyhon App druckt dann alles in einer Wurscht. 


 ###### VERSION 1 ######
 
 Gibt den Array in einer Zahlenkette aus


 ###### VERSION 2 ######

Gibt den Array mit Numby wie folgt aus:

Rotwerte:
[47475 47503 47542 47531 47520 47520 47542 47559 47575 47590 47609 47627
 47634 47646 47651 47664 47639 47515 47446 47444 47476 47499 47535 47536
 47519 47511 47526 47552 47576 47597 47610 47619 47617 47641 47651 47673
 47657 47539 47430 47417 47441 47462 47489 47511 47490 47479 47502 47523
 47549 47558 47568 47595 47606 47615 47624 47630 47639 47576 47438 47381
 47401 47424 47444 47483 47486 47471 47472 47485 47507 47535 47554 47568
 47576 47580 47592 47599 47617 47610 47506 47387 47360 47401 47427 47462
 47477 47460 47456 47468 47491 47508 47522 47537 47547 47558 47564 47580
 47593 47604 47566 47441]

In der Version Liste mit verschobenen Tabelen wird nun eine Liste erstellt, jedoch sind die Tabellen verschoben:

|  567   |        |
|  557   |        |
|  560   |        |
|  557   |        |
|  556   |        |
|  550   |        |
|  553   |        |
|  561   |        |
|  559   |        |
|        |  3550  |
|        |  3551  |
|        |  3556  |
|        |  3546  |
|        |  3546  |
|        |  3543  |
|        |  3542  |
|        |  3545  |
|        |  3543  |
|        |  3550  |

Das Prog: "Erste_Tabelle_als_txt_gespeichert_Name_Datum.py" speichert dies so in eine txt Datei mit dem Namen des Datums und der Zeit. 

korrektes_speichern_raw_ir_and_red_excel.py Speichert die Daten korrekt im Excel

Red raw     IR raw
232         324324
3243242     32324

