Wir versuchen nun den Code so umzuändern, dass wir 2 Threads haben, einen import Thread und einen Plotting Thread. 
Der Import Thread prüft permanent ob neue Daten verfügbar sind, der Plotting Thread plottet derweil die ganze Zeit. 



###### Step 1: Erzeugungs eines Q Threads der die Daten an eine Pufferliste anfügt: ######


class DataUpdater(QObject):
    data_updated = pyqtSignal()

    def __init__(self, df):
        super().__init__()
  
    def run(self):

        global df_old
        global list_data_ir_puffer
        df_old = None #dataframe der verwendet wird zum prüfen ob sich der importierte df verändert hat

        while True:
            # Überprüfe, ob neue Daten verfügbar sind
            # Hier kannst du die Logik implementieren, um zu überprüfen, ob neue Daten vorliegen

            from safe_to_excel import df as df_new
            if not df_new.equals(df_old):

                list_data_ir_puffer += df_new['Red'].tail(SAMPE_ARRAY).astype(float).tolist() # Fügt 100 neue Daten an die Liste IR Puffer an

                df_old = df_new

                if len(list_data_ir_puffer) > 500:
                    print("Die Anzahl der Einträge in der Liste IR Puffer ist größer als 500.")

            time.sleep(0.1)  # Beispiel: Wartezeit von 1 Sekunde



