Erstmal eine async while Schleife eingebaut, sobald das plotter Fenster geöffnet wird:

(Code 1)

################################################
import asyncio
import threading

# Die asynchrone Funktion
async def test_async():
    while True:
        print("Test")
        await asyncio.sleep(1)

# Die Funktion, die in einem separaten Thread ausgeführt wird
def run_async_function():
    asyncio.run(test_async())

# Starten des Threads
_thread = threading.Thread(target=run_async_function)
_thread.start()
##########################################################

Code 2:

Einige Bedingungen hinzugefügt, damit das Fenster geschlossen werden kann (Flagg etc)

################

plotter_live_Test_while_klappt_mit_exit_checkbox.py Hier klappt auch das stoppen der Testschleife, wenn die Checkbox deaktiviert wird (IR)

#################
plotter_live_Testdaten_array_funkt.py Hier werden die ersten 500 korrekt geprintet, also in der while schleife, wenn die IR Checkbox aktiviert ist, der Puffer läuft abre noch über.

#### live_plotter_testdaten_klappt.py ####

Hier werden die Daten nun korrekt ausgegeben, ohne dass der Filter überläuft (Delay wurde gelöscht) nach einigen Datensätzen ist aber der Dataframe leer. (ev ein älterer Bug?)
